{"version":3,"sources":["3d/data/barViewReducer.ts","rootReducer.ts","store.ts","IiotAppProviders.tsx","3d/data/barViewState.ts","3d/useLoadFloaterModel.ts","3d/data/dimensions.ts","3d/useInitializeBarView.ts","useLighting.ts","3d/useClippingPlane.ts","3d/utility/springConfig.ts","3d/Floater.tsx","utility/usePrevious.ts","3d/FloaterContainer.tsx","3d/useFloaterContainerSelected.ts","3d/FloaterString.tsx","3d/BarViewScene.tsx","3d/usePointCamera.ts","3d/data/retrieveInstallationStructureThunk.ts","3d/BarView.tsx","utility/useSize.ts","overlay/DumbOverlayContainer.tsx","overlay/windows/SelectedInfo.tsx","overlay/Overlay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialBarViewState","installationStructure","undefined","selectedFloaterCoordinate","barViewActions","setInstallationStructure","createAction","structure","setSelectedCoordinate","coordinate","selectNextFloater","selectPreviousFloater","clearSelectedCoordinate","barViewReducer","createReducer","handleAction","state","action","payload","nextFloater","previous","coord","x","y","rootReducer","combineReducers","barView","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","secondary","console","log","IiotContextProviders","props","utils","DayjsUtils","ThemeProvider","children","_mixers","floaterMesh","gridDimensions","useLoadFloaterModel","useState","floaterModel","setFloaterModel","useContext","BarViewStateContext","useEffect","Promise","all","loadFloaterPanelMesh","loadFloaterPanelTexture","then","floaterTexture","materials","material","name","Error","wrapS","RepeatWrapping","wrapT","color","setHex","emissive","needsUpdate","map","geometry","scale","loader","FBXLoader","resolve","reject","load","panelLoadResult","traverse","loadedObject","type","textureLoader","TGALoader","texture","DIMENSIONS","useInitializeBarView","scene","three","useThree","gl","useClippingPlane","background","THREE","setHSL","fog","hemiLight","groundColor","position","set","add","dirLight","multiplyScalar","castShadow","shadow","mapSize","width","height","camera","left","right","top","bottom","far","bias","springConfig","mass","tension","friction","sprindDurationConfigWithPeriod","R","period","Math","pow","PI","config","duration","easing","easeQuadInOut","Floater","group","useMemo","newMesh","clone","pos","from","motionPeriod","springState","setSpringState","spring","useSpring","previousProps","item","defaultValue","ref","useRef","current","usePrevious","selectionRef","selected","geo","mat","opacity","transparent","mesh","remove","primitive","onClick","object","FloaterContainer","gridPosition","useSelector","useFloaterContainerSelected","sequenceOfNumbers","setNumber","forEach","value","index","setTimeout","dispatch","useDispatch","useCallback","FloaterString","floaterProps","xIndex","key","React","BarViewScene","barViewState","bounding","z","lookAt","Vector3","usePointCamera","Provider","retrieveInstallationStructureThunk","withStyles","makeStyles","mainContainer","zIndex","canvas","BarView","styles","size","_setSize","useSize","setSize","className","handleHeight","handleWidth","onResize","Consumer","resize","scroll","DumbOverlayContainer","absoluteRoot","relativeRoot","pointerEvents","floaterId","n","length","Array","join","SelectedInfo","previousFloater","floaterInfo","floaterInfoList","root","titleArea","IconButton","classes","chevron","ChevronLeft","Typography","variant","heading","ChevronRight","grid","status","error","averageProduction","averageTension","averageSunObstruction","messages","message","dayjs","time","format","padding","contrastText","textAlign","display","justifyContent","gridTemplateColumns","marginTop","marginLeft","textDecoration","valueOf","Overlay","App","exact","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0ae87861.chunk.js","sourcesContent":["import { ActionType, createAction, createReducer } from \"typesafe-actions\";\nimport { IiotAction } from \"../../rootReducer\";\nimport { InstallationStructure } from \"../utility/installationStructure\";\nimport { TwoDCoord } from \"../../utility/types\";\n\ninterface BarViewState {\n  installationStructure: InstallationStructure;\n  selectedFloaterCoordinate: TwoDCoord | null;\n}\n\nconst initialBarViewState: BarViewState = ({\n  installationStructure: undefined,\n  selectedFloaterCoordinate: null\n} as Partial<BarViewState>) as BarViewState;\n\nexport const barViewActions = {\n  setInstallationStructure: createAction(\n    \"SET_INSTALLATION_STRUCTURE\",\n    (structure: InstallationStructure) => ({ structure })\n  )(),\n  setSelectedCoordinate: createAction(\n    \"BAR_VIEW/SET_SELECTED_FLOATER_COORDINATE\",\n    (coordinate: TwoDCoord) => ({ coordinate })\n  )(),\n  selectNextFloater: createAction(\"BAR_VIEW/SELECT_NEXT_FLOATER\")(),\n  selectPreviousFloater: createAction(\"BAR_VIEW/SELECT_PREVIOUS_FLOATER\")(),\n  clearSelectedCoordinate: createAction(\n    \"BAR_VIEW/CLEAR_SELECTED_FLAOTER_COORDINATE\"\n  )()\n};\n\nexport type BarViewAction = ActionType<typeof barViewActions>;\n\nexport const barViewReducer = createReducer<BarViewState, IiotAction>(\n  initialBarViewState\n)\n  .handleAction(barViewActions.setInstallationStructure, (state, action) => ({\n    ...state,\n    installationStructure: action.payload.structure\n  }))\n  .handleAction(barViewActions.setSelectedCoordinate, (state, action) => ({\n    ...state,\n    selectedFloaterCoordinate: action.payload.coordinate\n  }))\n  .handleAction(barViewActions.clearSelectedCoordinate, (state) => ({\n    ...state,\n    selectedFloaterCoordinate: null\n  }))\n  .handleAction(barViewActions.selectNextFloater, state => ({\n    ...state,\n    selectedFloaterCoordinate: nextFloater(state.selectedFloaterCoordinate)\n  }))\n  .handleAction(barViewActions.selectPreviousFloater, state => ({\n    ...state,\n    selectedFloaterCoordinate: previous(state.selectedFloaterCoordinate)\n  }));\n\nfunction nextFloater(coord: TwoDCoord | null) {\n  if (coord === null) {\n    return null;\n  }\n  if (coord.x === 3 && coord.y === 4) {\n    return coord;\n  }\n  if (coord.x < 3) {\n    return { x: coord.x + 1, y: coord.y };\n  } else {\n    return { x: 0, y: coord.y + 1 };\n  }\n}\n\nfunction previous(coord: TwoDCoord | null) {\n  if (coord === null) {\n    return null;\n  }\n  if (coord.x === 0 && coord.y === 0) {\n    return coord;\n  }\n  if (coord.x > 0) {\n    return { x: coord.x - 1, y: coord.y };\n  } else {\n    return { x: 3, y: coord.y - 1 };\n  }\n}\n","import { BarViewAction, barViewReducer } from './3d/data/barViewReducer';\nimport { combineReducers } from 'redux';\n\nexport const rootReducer = combineReducers({\n  barView: barViewReducer\n});\n\nexport type IiotStoreState = ReturnType<typeof rootReducer>;\n\nexport type IiotAction = BarViewAction;\n","import { ActionCreator, applyMiddleware, createStore } from \"redux\";\nimport { IiotAction, IiotStoreState, rootReducer } from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk, { ThunkAction, ThunkDispatch } from \"redux-thunk\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type IiotThunkAction<ReturnType> = ThunkAction<\n  ReturnType,\n  IiotStoreState,\n  any,\n  IiotAction\n>;\n\nexport type IiotThunkActionCreator<ReturnType = void> = ActionCreator<\n  IiotThunkAction<Promise<ReturnType>>\n>;\n\nexport type IiotDispatch = ThunkDispatch<IiotStoreState, any, IiotAction>;\n","import * as React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DayjsUtils from \"@date-io/dayjs\";\nimport \"dayjs/locale/nb\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#1070E4\" },\n    secondary: { main: \"#FFEA00\" }\n  }\n});\nconsole.log(\"🏞\", \"ALTERNATIVE THEME\", theme);\n\nexport const IiotContextProviders: React.FC<{\n  children: React.ReactNode;\n}> = props => (\n  <Provider store={store}>\n    <Router>\n      <MuiPickersUtilsProvider utils={DayjsUtils}>\n        <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n      </MuiPickersUtilsProvider>\n    </Router>\n  </Provider>\n);\n","import { AnimationMixer, Mesh } from \"three\";\n\nexport interface BarViewState {\n  /**\n   * Mixers to update in animation loop\n   */\n  _mixers: AnimationMixer[];\n  /**\n   * Floater mesh to reuse\n   */\n  floaterMesh: Mesh | undefined;\n  installationStructure: { x: number; y: number };\n}\n\nexport const initialBarViewState: BarViewState = {\n  _mixers: [],\n  floaterMesh: undefined,\n  gridDimensions: { x: 0, y: 0 }\n} as any;\n","import { useContext, useEffect, useState } from \"react\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\nimport { Mesh, MeshPhongMaterial, RepeatWrapping, Texture } from \"three\";\nimport { TGALoader } from \"three/examples/jsm/loaders/TGALoader\";\nimport { BarViewStateContext } from \"./BarViewScene\";\n\n/**\n * What to scale the panel with so that the dimensions are 3x3\n */\nconst SCALE = 3.0 / 225;\n\nexport const useLoadFloaterModel = () => {\n  const [floaterModel, setFloaterModel] = useState<Mesh>();\n  const state = useContext(BarViewStateContext);\n  useEffect(() => {\n    loadFloaterModel().then(floaterMesh => {\n      state.floaterMesh = floaterMesh;\n      setFloaterModel(floaterMesh);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  return floaterModel;\n};\n\nfunction loadFloaterModel() {\n  return Promise.all([loadFloaterPanelMesh(), loadFloaterPanelTexture()]).then(\n    ([floaterMesh, floaterTexture]: [Mesh, Texture]) => {\n      const materials = floaterMesh.material as [\n        MeshPhongMaterial,\n        MeshPhongMaterial\n      ];\n      if (materials[0].name !== \"Body\" || materials[1].name !== \"Solcelle\") {\n        throw new Error(\"Unexpected loading result wrt materials\");\n      }\n      floaterTexture.wrapS = RepeatWrapping;\n      floaterTexture.wrapT = RepeatWrapping;\n      materials[0].color.setHex(0x2b2d2f);\n      materials[1].color.setHex(0xffffff);\n      materials[1].emissive.setHex(0x000000);\n      materials[1].needsUpdate = true;\n      materials[1].map = floaterTexture;\n      floaterMesh.geometry.scale(SCALE, SCALE, SCALE);\n      console.log(\"ℹ️\", \"floaterMesh\", floaterMesh);\n      return floaterMesh;\n    }\n  );\n}\n\nfunction loadFloaterPanelMesh() {\n  const loader = new FBXLoader();\n  return new Promise<Mesh>((resolve, reject) => {\n    loader.load(\"/res/panel.fbx\", panelLoadResult => {\n      panelLoadResult.traverse(loadedObject => {\n        if (loadedObject.type !== \"Mesh\") {\n          return;\n        }\n        if (loadedObject.name === \"Panel\") {\n          resolve(loadedObject as Mesh);\n        } else {\n          reject(\"Unexpected loading result\");\n        }\n      });\n    });\n  });\n}\n\nfunction loadFloaterPanelTexture() {\n  const textureLoader = new TGALoader();\n  return new Promise<Texture>(resolve => {\n    textureLoader.load(\"/res/panel-texture.tga\", texture => {\n      resolve(texture);\n    });\n  });\n}\n","export const DIMENSIONS = {\n  TRAY_WIDTH: 3,\n  TRAY_HEIGHT: 0.1,\n  TRAY_CLEARANCE: 1,\n  TRAY_X: 1.5,\n  TRAY_Z: 1.5,\n  BAR_WIDTH: 0.3 / 3,\n  BAR_HEIGHT: 3,\n  BAR_X_OFFSET: 0,\n  BAR_Z_OFFSET: 0,\n  BAR_X_MULTIPLIER: 1,\n  BAR_Z_MULTIPLIER: 1\n};\n","import { useThree } from 'react-three-fiber';\nimport { useClippingPlane } from './useClippingPlane';\nimport { useLighting } from '../useLighting';\nimport { useMixerFameUpdate } from '../useFameMixerUpdate';\n\nexport const useInitializeBarView = () => {\n  const three = useThree();\n  useClippingPlane();\n  useLighting(three.scene);\n  useMixerFameUpdate();\n}\n","import { Scene } from \"three\";\nimport { useEffect } from \"react\";\nimport * as THREE from \"three\";\n\nexport const useLighting = (scene: Scene) => {\n  useEffect(() => {\n    scene.background = new THREE.Color().setHSL(0.6, 0, 1);\n    scene.fog = new THREE.Fog(scene.background as any, 1, 5000);\n    const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\n    hemiLight.color.setHSL(0.6, 1, 0.6);\n    hemiLight.groundColor.setHSL(0.095, 1, 0.75);\n    hemiLight.position.set(0, 300, 0);\n    scene.add(hemiLight);\n    const dirLight = new THREE.DirectionalLight(0xffffff, 1);\n    dirLight.color.setHSL(0.1, 1, 0.95);\n    dirLight.position.set(-1, 1.75, 1);\n    dirLight.position.multiplyScalar(200);\n    scene.add(dirLight);\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize.width = 2048;\n    dirLight.shadow.mapSize.height = 2048;\n    var d = 50;\n    dirLight.shadow.camera.left = -d;\n    dirLight.shadow.camera.right = d;\n    dirLight.shadow.camera.top = d;\n    dirLight.shadow.camera.bottom = -d;\n    dirLight.shadow.camera.far = 3500;\n    dirLight.shadow.bias = -0.0001;\n  }, [scene]);\n};\n","import { useThree } from \"react-three-fiber\";\n// import { Plane, Vector3 } from \"three\";\nimport { useEffect } from \"react\";\n\nexport const useClippingPlane = () => {\n  const three = useThree();\n  useEffect(() => {\n    // const clippingPlane = new Plane(new Vector3(0, 1, 0), 0.1);\n    // three.gl.clippingPlanes = [clippingPlane];\n  }, [three.gl]);\n};\n","import * as R from \"ramda\";\n// @ts-ignore\nimport { easeQuadInOut } from \"d3-ease\";\n\nexport const springConfig = { mass: 1, tension: 170, friction: 26 };\nexport const springConfigWithPeriod = R.memoizeWith(\n  R.identity as any,\n  (period: number) => {\n    const tension =\n      (Math.pow(Math.PI, 2) * (springConfig.mass as any)) /\n      Math.pow(period * 3, 2);\n    const config = {\n      ...springConfig,\n      tension,\n      friction: (20 / 17) * tension\n    };\n    console.log(\"🏞\", \"config is\", config);\n    return config;\n  }\n);\nexport const sprindDurationConfigWithPeriod = R.memoizeWith(\n  R.identity as any,\n  (period: number) => {\n    const config = {\n      duration: period * 1000.0,\n      easing: easeQuadInOut\n    };\n    console.log(\"🏞\", \"config is\", config);\n    return config;\n  }\n);\n","import * as React from \"react\";\nimport { useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { BarViewStateContext } from \"./BarViewScene\";\n// @ts-ignore\nimport { animated, useSpring } from \"react-spring/three\";\nimport { sprindDurationConfigWithPeriod } from \"./utility/springConfig\";\nimport { usePrevious } from \"../utility/usePrevious\";\n// import { usePrevious } from \"../utility/usePrevious\";\nimport * as THREE from \"three\";\n// import dayjs from 'dayjs';\n\n// let firstPosition: number[] = [-999, -1, -1];\n// // @ts-ignore\n// const logOneFloater = position => (...args) => {\n//   if (firstPosition[0] === -999) {\n//     firstPosition = position;\n//   }\n//   if (firstPosition[0] === position[0] && firstPosition[2] === position[2]) {\n//     console.log(\"🤣 \", ...args);\n//   }\n// };\n\nexport const Floater: React.FC<{\n  position: [number, number, number];\n  motionPeriod: number;\n  onClick?: () => void;\n  selected: boolean;\n}> = props => {\n  const state = useContext(BarViewStateContext);\n  const group = useMemo(() => {\n    if (state.floaterMesh === undefined) {\n      throw new Error(\"Floater model is not ready\");\n    }\n    const newMesh = state.floaterMesh.clone();\n    const group = new THREE.Group();\n    group.add(newMesh);\n    return group;\n  }, [state.floaterMesh]);\n\n  // this hack fixes a problem with \"resetting\" spring\n  // https://github.com/react-spring/react-spring/issues/366#issuecomment-446328238\n  const [springState, setSpringState] = useState({\n    pos: props.position,\n    from: {\n      pos: props.position\n    },\n    config: sprindDurationConfigWithPeriod(props.motionPeriod)\n  });\n  const spring = useSpring({\n    ...springState\n  });\n  const previousProps = usePrevious(props);\n  useEffect(() => {\n    setSpringState({\n      pos: props.position,\n      from: {\n        pos:\n          previousProps !== undefined ? previousProps.position : props.position\n      },\n      config: sprindDurationConfigWithPeriod(props.motionPeriod)\n    });\n  }, [props.position, props.motionPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const selectionRef = useRef<any>();\n  useEffect(() => {\n    if (props.selected) {\n      const geo = new THREE.BoxGeometry(3.2, 0.3, 3.2);\n      const mat = new THREE.MeshPhongMaterial({\n        color: 0x1070e4,\n        opacity: 0.5,\n        transparent: true\n      });\n      const mesh = new THREE.Mesh(geo, mat);\n      selectionRef.current = mesh;\n      group.add(mesh);\n    } else {\n      group.remove(selectionRef.current as any);\n    }\n  }, [props.selected, group]);\n\n  return useMemo(\n    () =>\n      group ? (\n        <>\n          <animated.primitive\n            onClick={props.onClick}\n            object={group}\n            position={spring.pos}\n          />\n        </>\n      ) : null,\n    [spring.pos, group, props.onClick]\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = <T>(item: T, defaultValue: T = undefined as any) => {\n  const ref = useRef<T>(defaultValue);\n  useEffect(() => {\n    ref.current = item;\n  }, [item]);\n  return ref.current;\n};\n","import * as React from \"react\";\nimport { Floater } from \"./Floater\";\nimport { DIMENSIONS } from \"./data/dimensions\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Coords } from \"./utility/coords\";\nimport * as R from \"ramda\";\nimport { useDispatch } from \"react-redux\";\nimport { barViewActions } from \"./data/barViewReducer\";\nimport { useFloaterContainerSelected } from \"./useFloaterContainerSelected\";\n\nexport const FloaterContainer: React.FC<{\n  gridPosition: { x: number; y: number };\n}> = props => {\n  const selected = useFloaterContainerSelected(props.gridPosition);\n  // const state = useContext(BarViewStateContext);\n  const position = useMemo<Coords>(\n    () => [\n      DIMENSIONS.TRAY_WIDTH / 2 +\n        props.gridPosition.y *\n          (DIMENSIONS.TRAY_WIDTH + DIMENSIONS.TRAY_CLEARANCE),\n      0,\n      DIMENSIONS.TRAY_WIDTH / 2 +\n        props.gridPosition.x *\n          (DIMENSIONS.TRAY_WIDTH + DIMENSIONS.TRAY_CLEARANCE)\n    ],\n    [props.gridPosition]\n  );\n  const [sequenceOfNumbers, setNumber] = useState(0);\n  useEffect(() => {\n    R.pipe(\n      R.map(() => [4, 0, 3, 0]),\n      R.unnest\n    )(R.range(0, 100)).forEach((value, index) => {\n      setTimeout(() => {\n        setNumber(value);\n      }, index * 3000);\n    });\n  }, []);\n  const dispatch = useDispatch();\n  const onClick = useCallback(() => {\n    return dispatch(barViewActions.setSelectedCoordinate(props.gridPosition));\n  }, [dispatch, props.gridPosition]);\n  // const delay = useMemo(\n  //   () =>\n  //     200 * (state.installationStructure.x - props.gridPosition.x) +\n  //     300 * (state.installationStructure.y - props.gridPosition.y),\n  //   []\n  // );\n  return (\n    <>\n      <Floater\n        onClick={onClick}\n        position={useMemo(() => [position[0], sequenceOfNumbers, position[2]], [\n          sequenceOfNumbers,\n          position\n        ])}\n        motionPeriod={3}\n        selected={selected}\n      />\n    </>\n  );\n};\n","import { TwoDCoord } from \"../utility/types\";\nimport { useSelector } from \"react-redux\";\nimport { IiotStoreState } from \"../rootReducer\";\n\nexport const useFloaterContainerSelected = (gridPosition: TwoDCoord) => {\n  const selectedFloaterCoordinate = useSelector(\n    (state: IiotStoreState) => state.barView.selectedFloaterCoordinate\n  );\n  return (\n    selectedFloaterCoordinate?.x === gridPosition?.x &&\n    selectedFloaterCoordinate?.y === gridPosition?.y\n  );\n};\n","import * as React from \"react\";\nimport { FloaterContainer } from \"./FloaterContainer\";\nimport * as R from \"ramda\";\nimport { BarViewStateContext } from \"./BarViewScene\";\nimport { useContext, useMemo } from \"react\";\n\nexport const FloaterString: React.FC<{\n  index: number;\n}> = props => {\n  const state = useContext(BarViewStateContext);\n  const floaterProps = useMemo(\n    () =>\n      R.range(0, state.installationStructure.x).map(xIndex => {\n        return {\n          key: `${xIndex}_${props.index}`,\n          gridPosition: { x: xIndex, y: props.index }\n        };\n      }),\n    [state.installationStructure, props.index]\n  );\n  return (\n    <>\n      {floaterProps.map(props => {\n        return <FloaterContainer {...props} />;\n      })}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { initialBarViewState } from \"./data/barViewState\";\nimport { Size } from \"../utility/useSize\";\nimport * as R from \"ramda\";\nimport { useLoadFloaterModel } from \"./useLoadFloaterModel\";\nimport { usePointCamera } from \"./usePointCamera\";\nimport { useInitializeBarView } from \"./useInitializeBarView\";\nimport { IiotStoreState } from \"../rootReducer\";\nimport { FloaterString } from \"./FloaterString\";\nimport { useEffect } from \"react\";\n\nexport const BarViewStateContext = React.createContext(initialBarViewState);\n\nexport const BarViewScene: React.FC<{\n  size: Size;\n  barView: IiotStoreState[\"barView\"];\n}> = props => {\n  console.log(\"BarViewScene render\");\n  const barViewState = initialBarViewState;\n  const floaterModel = useLoadFloaterModel();\n  useInitializeBarView();\n  usePointCamera(props.barView.installationStructure);\n  useEffect(() => {\n    barViewState.installationStructure = props.barView.installationStructure;\n  }, [props.barView, barViewState]);\n  return (\n    <BarViewStateContext.Provider value={barViewState}>\n      {floaterModel &&\n        props.barView.installationStructure &&\n        R.range(0, props.barView.installationStructure.y).map(index => (\n          <FloaterString\n            index={index}\n            key={index}\n          />\n        ))}\n    </BarViewStateContext.Provider>\n  );\n};\n","import { useEffect, useMemo } from \"react\";\nimport { DIMENSIONS } from \"./data/dimensions\";\nimport { PerspectiveCamera, Vector3 } from \"three\";\nimport { useThree } from \"react-three-fiber\";\nimport { InstallationStructure } from \"./utility/installationStructure\";\n\nexport const usePointCamera = (\n  installationStructure: InstallationStructure\n) => {\n  const three = useThree();\n  const bounding = useMemo(\n    () => [\n      DIMENSIONS.TRAY_WIDTH +\n        (installationStructure.y - 1) *\n          (DIMENSIONS.TRAY_WIDTH + DIMENSIONS.TRAY_CLEARANCE),\n      0,\n      DIMENSIONS.TRAY_WIDTH +\n        (installationStructure.x - 1) *\n          (DIMENSIONS.TRAY_WIDTH + DIMENSIONS.TRAY_CLEARANCE)\n    ],\n    [installationStructure.y, installationStructure.x]\n  );\n  useEffect(() => {\n    const camera: PerspectiveCamera = three.camera as PerspectiveCamera;\n    // const distance = bounding[0] / 2 / Math.tan(75 / 2 / (180 / Math.PI));\n    // camera.position.z = bounding[2] * (installationStructure.x > 4 ? 1.2 : 1);\n    camera.position.x = 10;\n    camera.position.y = 15;\n    camera.position.z = 24;\n    // camera.position.y = distance;\n    // camera.position.z = camera.position.z + 6;\n    // camera.position.y = camera.position.y + 2;\n    // camera.position.x = bounding[0] / 2;\n    camera.lookAt(new Vector3(bounding[0] / 2, 0, bounding[2] / 3 + 4));\n    // camera.lookAt(0, 0,0);\n    console.log(\"📷\", \"position\", camera.position, \"where to point\", bounding);\n  }, [bounding, three.camera, installationStructure]);\n};\n","import { IiotThunkActionCreator } from \"../../store\";\nimport { barViewActions } from \"./barViewReducer\";\nimport { InstallationStructure } from \"../utility/installationStructure\";\n\nfunction fetchInstallationStructure(): Promise<InstallationStructure> {\n  // return fetch(`api/installation-structure`).then(data => data.json());\n  return Promise.resolve({ x: 4, y: 5 });\n}\n\nexport const retrieveInstallationStructureThunk: IiotThunkActionCreator = () => dispatch => {\n  return fetchInstallationStructure().then(structure => {\n    dispatch(barViewActions.setInstallationStructure(structure));\n  });\n};\n","import * as React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport { useSize } from \"../utility/useSize\";\nimport { useEffect } from \"react\";\nimport { IiotStoreState } from \"../rootReducer\";\nimport {\n  useDispatch,\n  useSelector,\n  ReactReduxContext,\n  Provider\n} from \"react-redux\";\nimport { Canvas } from \"react-three-fiber\";\nimport { BarViewScene } from \"./BarViewScene\";\nimport { retrieveInstallationStructureThunk } from \"./data/retrieveInstallationStructureThunk\";\n\nconst withStyles = makeStyles((theme: Theme) => ({\n  mainContainer: {\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 1,\n    left: \"0\",\n    width: \"100vw\",\n    height: \"100vh\"\n  },\n  canvas: {}\n}));\n\nexport const BarView: React.FC = () => {\n  const styles = withStyles();\n  const [size, setSize] = useSize();\n  const barView = useSelector((state: IiotStoreState) => state.barView);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(retrieveInstallationStructureThunk());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className={styles.mainContainer}>\n      <ReactResizeDetector handleHeight handleWidth onResize={setSize} />\n      {/*Hack to fix some bug that destroys context*/}\n      {/*https://github.com/react-spring/react-three-fiber/issues/43#issuecomment-476073615*/}\n      <ReactReduxContext.Consumer>\n        {({ store }) => (\n          <Canvas className={styles.canvas} resize={{ scroll: false }}>\n            <Provider store={store}>\n              {barView.installationStructure && (\n                <BarViewScene size={size} barView={barView} />\n              )}\n            </Provider>\n          </Canvas>\n        )}\n      </ReactReduxContext.Consumer>\n    </div>\n  );\n};\n","import { useCallback, useState } from \"react\";\n\nexport interface Size {\n  x: number;\n  y: number;\n}\n\n/**\n * state for ReactResizeDetector\n *\n * @example\n * const [size, setSize] = useSize();\n * ...\n * <ReactResizeDetector  onResize={setSize}\n *   handleHeight handleWidth\n * />\n *\n */\nexport const useSize = () => {\n  const [size, _setSize] = useState<Size>({ x: 0, y: 0 });\n  const setSize = useCallback(\n    (x, y) => {\n      _setSize({ x, y });\n    },\n    [_setSize]\n  );\n  return [size, setSize] as [Size, (width: number, height: number) => void];\n};\n","import * as React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const DumbOverlayContainer: React.FC<{\n  children: React.ReactNode;\n}> = props => {\n  const styles = withStyles();\n\n  return (\n    <div className={styles.absoluteRoot}>\n      <div className={styles.relativeRoot}>{props.children}</div>\n    </div>\n  );\n};\n\nconst withStyles = makeStyles((theme: Theme) => ({\n  absoluteRoot: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100vh\",\n    width: \"100vw\"\n  },\n  relativeRoot: {\n    position: \"relative\",\n    height: \"100vh\",\n    width: \"100vw\",\n    zIndex: 2,\n    pointerEvents: 'none',\n  }\n}));\n","import * as React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IiotStoreState } from \"../../rootReducer\";\nimport { TwoDCoord } from \"../../utility/types\";\nimport { IconButton, Typography } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport { useCallback, useMemo } from \"react\";\nimport { barViewActions } from \"../../3d/data/barViewReducer\";\nimport dayjs from \"dayjs\";\n\n// @ts-ignore\nfunction pad(n, width) {\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(\"0\") + n;\n}\nfunction floaterId(position: TwoDCoord) {\n  return `HF${pad(position.y * 4 + position.x, 2)}`;\n}\n\nexport const SelectedInfo = () => {\n  const dispatch = useDispatch();\n  const nextFloater = useCallback(\n    () => dispatch(barViewActions.selectNextFloater()),\n    [dispatch]\n  );\n  const previousFloater = useCallback(\n    () => dispatch(barViewActions.selectPreviousFloater()),\n    [dispatch]\n  );\n  const selectedFloaterCoordinate = useSelector(\n    (state: IiotStoreState) => state.barView.selectedFloaterCoordinate\n  );\n  const styles = withStyles();\n  const floaterInfo: FloaterInfo = useMemo(() => {\n    if (selectedFloaterCoordinate === null) {\n      return null as any;\n    }\n    return getFloaterInfo(selectedFloaterCoordinate);\n  }, [selectedFloaterCoordinate]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.titleArea}>\n        {selectedFloaterCoordinate !== null && (\n          <IconButton\n            classes={{ root: styles.chevron }}\n            onClick={previousFloater}\n          >\n            <ChevronLeft />\n          </IconButton>\n        )}\n        <Typography variant={\"h4\"} classes={{ root: styles.heading }}>\n          {selectedFloaterCoordinate !== null\n            ? `Floater ${floaterId(selectedFloaterCoordinate)}`\n            : \"Select a floater...\"}\n        </Typography>\n        {selectedFloaterCoordinate !== null && (\n          <IconButton classes={{ root: styles.chevron }} onClick={nextFloater}>\n            <ChevronRight />\n          </IconButton>\n        )}\n      </div>\n      {selectedFloaterCoordinate !== null && (\n        <div className={styles.grid}>\n          <Typography variant={\"subtitle1\"}>Position</Typography>\n          <Typography variant={\"body1\"}>\n            {`Column ${selectedFloaterCoordinate?.y} Row ${selectedFloaterCoordinate?.x}`}\n          </Typography>\n          <Typography variant={\"subtitle1\"}>Status</Typography>\n          <Typography\n            variant={\"body1\"}\n            className={\n              floaterInfo.status === \"End of life approaches\"\n                ? styles.error\n                : \"\"\n            }\n          >\n            {floaterInfo.status}\n          </Typography>\n\n          <Typography variant={\"subtitle1\"}>Avg production [W]</Typography>\n          <Typography variant={\"body1\"}>\n            {floaterInfo.averageProduction}\n          </Typography>\n\n          <Typography variant={\"subtitle1\"}>Avg tension [Nm]</Typography>\n          <Typography variant={\"body1\"}>\n            {floaterInfo.averageTension}\n          </Typography>\n\n          <Typography variant={\"subtitle1\"}>Avg sun obstruction [%]</Typography>\n          <Typography variant={\"body1\"}>\n            {floaterInfo.averageSunObstruction}\n          </Typography>\n\n          <Typography variant={\"subtitle1\"}>Messages</Typography>\n          <div>\n            {floaterInfo.messages.map(message => (\n              <Typography variant={\"body1\"}>\n                {`${dayjs(message.time).format(\"YYYY-MM-DD HH:MM\")} ${\n                  message.message\n                }`}\n              </Typography>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getFloaterInfo(coord: TwoDCoord) {\n  return floaterInfoList[(coord.y * 4 + coord.x) % 5];\n}\n\nconst withStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    width: \"600px\",\n    height: \"275px\",\n    // todo delete\n    padding: \"16px\",\n    pointerEvents: \"all\",\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  heading: {\n    textAlign: \"center\"\n  },\n  titleArea: {\n    display: \"flex\",\n    justifyContent: \"space-around\"\n  },\n  chevron: {\n    color: \"#fff\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 2fr\",\n    marginTop: \"20px\",\n    marginLeft: \"50px\"\n  },\n  error: {\n    textDecoration: \"overline underline\"\n  }\n}));\n\ninterface FloaterInfo {\n  status: \"Good\" | \"End of life approaches\";\n  messages: { time: number; message: string }[];\n  averageProduction: number;\n  averageSunObstruction: number;\n  averageTension: number;\n}\n\nconst floaterInfoList: FloaterInfo[] = [\n  {\n    status: \"Good\",\n    averageProduction: 200,\n    averageSunObstruction: 15,\n    averageTension: 9.6,\n    messages: [\n      {\n        time: dayjs(\"2020-06-22 18:12\").valueOf(),\n        message: \"45% obstruction for over 2 hours\"\n      },\n      {\n        time: dayjs(\"2020-06-22 19:02\").valueOf(),\n        message: \"Obstruction is at 0%\"\n      }\n    ]\n  },\n  {\n    status: \"Good\",\n    averageProduction: 196,\n    averageSunObstruction: 8,\n    averageTension: 10.4,\n    messages: []\n  },\n  {\n    status: \"Good\",\n    averageProduction: 186,\n    averageSunObstruction: 6,\n    averageTension: 11.2,\n    messages: [\n      {\n        time: dayjs(\"2020-06-23 19:02\").valueOf(),\n        message: \"Tension is high, consider maintenance\"\n      }\n    ]\n  },\n  {\n    status: \"Good\",\n    averageProduction: 186,\n    averageSunObstruction: 7,\n    averageTension: 11.2,\n    messages: []\n  },\n  {\n    status: \"End of life approaches\",\n    averageProduction: 166,\n    averageSunObstruction: 14,\n    averageTension: 12.2,\n    messages: []\n  }\n];\n","import * as React from \"react\";\nimport { DumbOverlayContainer } from \"./DumbOverlayContainer\";\nimport { SelectedInfo } from \"./windows/SelectedInfo\";\n\nexport const Overlay: React.FC = () => {\n  return (\n    <DumbOverlayContainer>\n      <SelectedInfo />\n    </DumbOverlayContainer>\n  );\n};\n\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { IiotContextProviders } from \"./IiotAppProviders\";\nimport { BarView } from \"./3d/BarView\";\nimport { Overlay } from \"./overlay/Overlay\";\n\nfunction App() {\n  return (\n    <IiotContextProviders>\n      <Switch>\n        <Redirect exact from=\"/\" to={\"/dash\"} />\n        <Route path=\"/dash\">\n          <BarView />\n          <Overlay />\n        </Route>\n      </Switch>\n    </IiotContextProviders>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}